(()=>{"use strict";(()=>{const e=document.querySelector(".hamburger"),t=document.querySelector(".projects"),c=document.querySelector(".add-task"),r=document.querySelector(".exit-btn");e.addEventListener("click",(()=>{t.classList.add("active")})),c.addEventListener("click",(()=>{c.classList.toggle("add-task-active")})),r.addEventListener("click",(()=>{t.classList.remove("active")}))})();const e=(e,t)=>{const c=document.querySelector(".projects-list");(function(e){for(;e.firstChild;)e.removeChild(e.firstChild)})(c),e.forEach(((e,r)=>{const o=document.createElement("li");o.classList.add("project-element"),o.dataset.index=r,o.innerHTML=`${e.name} <i class='fa-solid fa-trash-can'></i>`,o.dataset.index===t&&(o.style.color="white"),c.appendChild(o)}))};!function(){const t=document.querySelector(".project-form"),c=document.querySelector(".project-input"),r=document.querySelector(".projects-list"),o=[];let s;t.addEventListener("submit",(t=>{t.preventDefault();const r=c.value;((e,t)=>{document.querySelector(".project-form");const c={name:t,list:[]};e.push(c)})(o,r),e(o),c.value=null})),r.addEventListener("click",(t=>{"li"===t.target.tagName.toLowerCase()&&(s=t.target.dataset.index,e(o,s))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQWlCLE1BRWpCLE1BQU1BLEVBQVlDLFNBQVNDLGNBQWMsY0FDbkNDLEVBQWlCRixTQUFTQyxjQUFjLGFBQ3hDRSxFQUFhSCxTQUFTQyxjQUFjLGFBQ3BDRyxFQUFjSixTQUFTQyxjQUFjLGFBRTNDRixFQUFVTSxpQkFBaUIsU0FBUyxLQUNsQ0gsRUFBZUksVUFBVUMsSUFBSSxTQUFRLElBR3ZDSixFQUFXRSxpQkFBaUIsU0FBUyxLQUNsQ0YsRUFBV0csVUFBVUUsT0FBTyxrQkFBa0IsSUFHakRKLEVBQVlDLGlCQUFpQixTQUFTLEtBQ3BDSCxFQUFlSSxVQUFVRyxPQUFPLFNBQVMsR0FHMUMsRUFuQmdCLEdBQWpCLE1Dc0JBLEVBcEJ1QixDQUFDQyxFQUFVQyxLQUMvQixNQUFNQyxFQUFzQlosU0FBU0MsY0FBYyxtQkNIaEMsU0FBU1ksR0FDNUIsS0FBT0EsRUFBUUMsWUFDYkQsRUFBUUUsWUFBWUYsRUFBUUMsV0FFakMsRURDRyxDQUFhRixHQUViRixFQUFTTSxTQUFRLENBQUNDLEVBQVNDLEtBQ3hCLE1BQU1DLEVBQWlCbkIsU0FBU29CLGNBQWMsTUFDOUNELEVBQWViLFVBQVVDLElBQUksbUJBQzdCWSxFQUFlRSxRQUFRQyxNQUFRSixFQUMvQkMsRUFBZUksVUFBWSxHQUFHTixFQUFRTyw2Q0FFcENMLEVBQWVFLFFBQVFDLFFBQVVYLElBQ2xDUSxFQUFlTSxNQUFNQyxNQUFRLFNBRzlCZCxFQUFvQmUsWUFBWVIsRUFBZSxHQUNoRCxHRWRjLFdBRWpCLE1BQU1TLEVBQWM1QixTQUFTQyxjQUFjLGlCQUNyQzRCLEVBQW1CN0IsU0FBU0MsY0FBYyxrQkFDMUM2QixFQUFjOUIsU0FBU0MsY0FBYyxrQkFFckNTLEVBQVcsR0FDakIsSUFBSUMsRUFFSmlCLEVBQVl2QixpQkFBaUIsVUFBVzBCLElBQ3RDQSxFQUFFQyxpQkFDRixNQUFNQyxFQUFhSixFQUFpQkssTUNibkIsRUFBQ3hCLEVBQVV1QixLQUNMakMsU0FBU0MsY0FBYyxpQkFBaEQsTUFDT2dCLEVDSEMsQ0FBRU8sS0RHc0JTLEVDSGhCRSxLQUFNLElESXJCekIsRUFBUzBCLEtBQUtuQixFQUFRLEVEV3JCLENBQWFQLEVBQVV1QixHQUN2QixFQUFldkIsR0FDZm1CLEVBQWlCSyxNQUFRLElBQUksSUFHL0JKLEVBQVl6QixpQkFBaUIsU0FBVTBCLElBQ0MsT0FBbkNBLEVBQUVNLE9BQU9DLFFBQVFDLGdCQUNsQjVCLEVBQWtCb0IsRUFBRU0sT0FBT2hCLFFBQVFDLE1BQ25DLEVBQWVaLEVBQVVDLEdBQzFCLEdBR0wsQ0d2QkFELEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9kb20uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvcmVuZGVyLXByb2plY3RzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2NsZWFyLWVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvcHJvamVjdHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvaW5pdC1wcm9qZWN0cy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9wcm9qZWN0cy1mYWN0b3J5LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkb21TdHVmZiA9ICgoKSA9PiB7XG5cbmNvbnN0IGhhbWJ1cmdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oYW1idXJnZXInKTtcbmNvbnN0IHByb2plY3RTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RzJyk7XG5jb25zdCBhZGRUYXNrQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC10YXNrJyk7XG5jb25zdCBwcm9qZWN0RXhpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5leGl0LWJ0bicpXG5cbmhhbWJ1cmdlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgcHJvamVjdFNlY3Rpb24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcbn0pO1xuXG5hZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgYWRkVGFza0J0bi5jbGFzc0xpc3QudG9nZ2xlKCdhZGQtdGFzay1hY3RpdmUnKTtcbn0pXG5cbnByb2plY3RFeGl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBwcm9qZWN0U2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbn0pXG5cbn0pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGRvbVN0dWZmO1xuXG4iLCJpbXBvcnQgY2xlYXJFbGVtZW50IGZyb20gJy4vY2xlYXItZWxlbWVudCc7XG5cbmNvbnN0IHJlbmRlclByb2plY3RzID0gKHByb2plY3RzLCBzZWxlY3RlZFByb2plY3QpID0+IHtcbiAgIGNvbnN0IHByb2plY3RzTGlzdEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMtbGlzdCcpO1xuXG4gICBjbGVhckVsZW1lbnQocHJvamVjdHNMaXN0RWxlbWVudCk7XG5cbiAgIHByb2plY3RzLmZvckVhY2goKHByb2plY3QsIGkpID0+IHtcbiAgICAgIGNvbnN0IHByb2plY3RFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgIHByb2plY3RFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QtZWxlbWVudCcpO1xuICAgICAgcHJvamVjdEVsZW1lbnQuZGF0YXNldC5pbmRleCA9IGk7XG4gICAgICBwcm9qZWN0RWxlbWVudC5pbm5lckhUTUwgPSBgJHtwcm9qZWN0Lm5hbWV9IDxpIGNsYXNzPSdmYS1zb2xpZCBmYS10cmFzaC1jYW4nPjwvaT5gO1xuXG4gICAgIGlmKHByb2plY3RFbGVtZW50LmRhdGFzZXQuaW5kZXggPT09IHNlbGVjdGVkUHJvamVjdCl7XG4gICAgICAgcHJvamVjdEVsZW1lbnQuc3R5bGUuY29sb3IgPSAnd2hpdGUnO1xuICAgICB9XG5cbiAgICAgIHByb2plY3RzTGlzdEVsZW1lbnQuYXBwZW5kQ2hpbGQocHJvamVjdEVsZW1lbnQpO1xuICAgfSk7XG5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHJlbmRlclByb2plY3RzOyBcbiIsIiBjb25zdCBjbGVhckVsZW1lbnQgPSBmdW5jdGlvbihlbGVtZW50KXtcbiAgIHdoaWxlIChlbGVtZW50LmZpcnN0Q2hpbGQpe1xuICAgICBlbGVtZW50LnJlbW92ZUNoaWxkKGVsZW1lbnQuZmlyc3RDaGlsZCk7IFxuICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGVhckVsZW1lbnQ7XG4iLCJpbXBvcnQgcHJvamVjdEZhY3RvcnkgZnJvbSAnLi9wcm9qZWN0cy1mYWN0b3J5JztcbmltcG9ydCBpbml0UHJvamVjdHMgZnJvbSAnLi9pbml0LXByb2plY3RzJztcbmltcG9ydCByZW5kZXJQcm9qZWN0cyBmcm9tICcuL3JlbmRlci1wcm9qZWN0cyc7XG5cbmNvbnN0IHByb2plY3RzSnMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgY29uc3QgcHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdC1mb3JtJyk7XG4gIGNvbnN0IHByb2plY3RGb3JtSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdC1pbnB1dCcpO1xuICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cy1saXN0Jyk7XG5cbiAgY29uc3QgcHJvamVjdHMgPSBbXTtcbiAgbGV0IHNlbGVjdGVkUHJvamVjdDtcblxuICBwcm9qZWN0Rm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBpbnB1dFZhbHVlID0gcHJvamVjdEZvcm1JbnB1dC52YWx1ZTtcbiAgICBpbml0UHJvamVjdHMocHJvamVjdHMsIGlucHV0VmFsdWUpO1xuICAgIHJlbmRlclByb2plY3RzKHByb2plY3RzKTtcbiAgICBwcm9qZWN0Rm9ybUlucHV0LnZhbHVlID0gbnVsbDtcbiAgfSk7XG5cbiAgcHJvamVjdExpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGlmKGUudGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2xpJyl7XG4gICAgICBzZWxlY3RlZFByb2plY3QgPSBlLnRhcmdldC5kYXRhc2V0LmluZGV4O1xuICAgICAgcmVuZGVyUHJvamVjdHMocHJvamVjdHMsIHNlbGVjdGVkUHJvamVjdCk7XG4gICAgfTtcbiAgfSk7XG5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHByb2plY3RzSnM7XG5cblxuIiwiaW1wb3J0IHByb2plY3RGYWN0b3J5IGZyb20gJy4vcHJvamVjdHMtZmFjdG9yeSc7XG5cbmNvbnN0IGluaXRQcm9qZWN0cyA9IChwcm9qZWN0cywgaW5wdXRWYWx1ZSk9PiB7XG4gIGNvbnN0IHByb2plY3RGb3JtSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdC1mb3JtJylcbiAgIGNvbnN0IHByb2plY3QgPSBwcm9qZWN0RmFjdG9yeShpbnB1dFZhbHVlKTtcbiAgIHByb2plY3RzLnB1c2gocHJvamVjdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBpbml0UHJvamVjdHM7XG4iLCJjb25zdCBwcm9qZWN0RmFjdG9yeSA9ICggbmFtZSApID0+IHtcbiAgIHJldHVybiB7IG5hbWUsIGxpc3Q6IFtdIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHByb2plY3RGYWN0b3J5O1xuXG4gIFxuIiwiaW1wb3J0IGRvbVN0dWZmIGZyb20gJy4vbW9kdWxlcy9kb20nO1xuaW1wb3J0IHByb2plY3RzSnMgZnJvbSAnLi9tb2R1bGVzL3Byb2plY3RzLmpzJ1xuXG5kb21TdHVmZlxuXG5wcm9qZWN0c0pzKCk7XG5cblxuXG4iXSwibmFtZXMiOlsiaGFtYnVyZ2VyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicHJvamVjdFNlY3Rpb24iLCJhZGRUYXNrQnRuIiwicHJvamVjdEV4aXQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwidG9nZ2xlIiwicmVtb3ZlIiwicHJvamVjdHMiLCJzZWxlY3RlZFByb2plY3QiLCJwcm9qZWN0c0xpc3RFbGVtZW50IiwiZWxlbWVudCIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImZvckVhY2giLCJwcm9qZWN0IiwiaSIsInByb2plY3RFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImRhdGFzZXQiLCJpbmRleCIsImlubmVySFRNTCIsIm5hbWUiLCJzdHlsZSIsImNvbG9yIiwiYXBwZW5kQ2hpbGQiLCJwcm9qZWN0Rm9ybSIsInByb2plY3RGb3JtSW5wdXQiLCJwcm9qZWN0TGlzdCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImlucHV0VmFsdWUiLCJ2YWx1ZSIsImxpc3QiLCJwdXNoIiwidGFyZ2V0IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==