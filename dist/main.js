(()=>{"use strict";(()=>{const e=document.querySelector(".hamburger"),t=document.querySelector(".projects"),s=document.querySelector(".add-task"),a=document.querySelector(".exit-btn"),c=document.querySelector(".modal"),d=document.querySelector(".modal-exit-btn");e.addEventListener("click",(()=>{t.classList.add("active")})),s.addEventListener("click",(()=>{s.classList.add("add-task-active"),setTimeout((()=>{c.classList.remove("modal-hide"),c.classList.add("modal-show")}),700)})),c.addEventListener("click",(e=>{"modal modal-show"===e.target.className&&(c.classList.remove("modal-show"),c.classList.add("modal-hide"),s.classList.remove("add-task-active"))})),d.addEventListener("click",(()=>{c.classList.remove("modal-show"),c.classList.add("modal-hide"),s.classList.remove("add-task-active")})),a.addEventListener("click",(()=>{t.classList.remove("active")}))})();const e=(e,t)=>{const s=document.querySelector(".projects-list");(function(e){for(;e.firstChild;)e.removeChild(e.firstChild)})(s),e.forEach(((e,a)=>{const c=document.createElement("li");c.classList.add("project-element"),c.dataset.index=a,c.innerHTML=`${e.name} <i class='fa-solid fa-trash-can'></i>`,c.dataset.index===t&&(c.style.color="white"),s.appendChild(c)}))};!function(){const t=document.querySelector(".project-form"),s=document.querySelector(".project-input"),a=document.querySelector(".projects-list");let c,d=[];t.addEventListener("submit",(t=>{t.preventDefault();const a=s.value;((e,t)=>{document.querySelector(".project-form");const s={name:t,list:[]};e.push(s)})(d,a),e(d,c),s.value=null})),a.addEventListener("click",(t=>{"li"===t.target.tagName.toLowerCase()&&(c=t.target.dataset.index,e(d,c))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQWlCLE1BRWpCLE1BQU1BLEVBQVlDLFNBQVNDLGNBQWMsY0FDbkNDLEVBQWlCRixTQUFTQyxjQUFjLGFBQ3hDRSxFQUFhSCxTQUFTQyxjQUFjLGFBQ3BDRyxFQUFjSixTQUFTQyxjQUFjLGFBQ3JDSSxFQUFRTCxTQUFTQyxjQUFjLFVBQy9CSyxFQUFlTixTQUFTQyxjQUFjLG1CQUU1Q0YsRUFBVVEsaUJBQWlCLFNBQVMsS0FDbENMLEVBQWVNLFVBQVVDLElBQUksU0FBUSxJQUd2Q04sRUFBV0ksaUJBQWlCLFNBQVMsS0FDbENKLEVBQVdLLFVBQVVDLElBQUksbUJBRTFCQyxZQUFXLEtBQ1RMLEVBQU1HLFVBQVVHLE9BQU8sY0FDdkJOLEVBQU1HLFVBQVVDLElBQUksYUFBYSxHQUNoQyxJQUFJLElBR1BKLEVBQU1FLGlCQUFpQixTQUFVSyxJQUNMLHFCQUF2QkEsRUFBRUMsT0FBT0MsWUFDVlQsRUFBTUcsVUFBVUcsT0FBTyxjQUN2Qk4sRUFBTUcsVUFBVUMsSUFBSSxjQUNwQk4sRUFBV0ssVUFBVUcsT0FBTyxtQkFDN0IsSUFHSEwsRUFBYUMsaUJBQWlCLFNBQVMsS0FDbkNGLEVBQU1HLFVBQVVHLE9BQU8sY0FDdkJOLEVBQU1HLFVBQVVDLElBQUksY0FDcEJOLEVBQVdLLFVBQVVHLE9BQU8sa0JBQWtCLElBR3BEUCxFQUFZRyxpQkFBaUIsU0FBUyxLQUNwQ0wsRUFBZU0sVUFBVUcsT0FBTyxTQUFTLEdBRzFDLEVBeENnQixHQUFqQixNQ3NCQSxFQXBCdUIsQ0FBQ0ksRUFBVUMsS0FDL0IsTUFBTUMsRUFBc0JqQixTQUFTQyxjQUFjLG1CQ0hoQyxTQUFTaUIsR0FDNUIsS0FBT0EsRUFBUUMsWUFDYkQsRUFBUUUsWUFBWUYsRUFBUUMsV0FFakMsRURDRyxDQUFhRixHQUViRixFQUFTTSxTQUFRLENBQUNDLEVBQVNDLEtBQ3hCLE1BQU1DLEVBQWlCeEIsU0FBU3lCLGNBQWMsTUFDOUNELEVBQWVoQixVQUFVQyxJQUFJLG1CQUM3QmUsRUFBZUUsUUFBUUMsTUFBUUosRUFDL0JDLEVBQWVJLFVBQVksR0FBR04sRUFBUU8sNkNBRXBDTCxFQUFlRSxRQUFRQyxRQUFVWCxJQUNsQ1EsRUFBZU0sTUFBTUMsTUFBUSxTQUc5QmQsRUFBb0JlLFlBQVlSLEVBQWUsR0FDaEQsR0VmYyxXQUVqQixNQUFNUyxFQUFjakMsU0FBU0MsY0FBYyxpQkFDckNpQyxFQUFtQmxDLFNBQVNDLGNBQWMsa0JBQzFDa0MsRUFBY25DLFNBQVNDLGNBQWMsa0JBRTNDLElBQ0llLEVBREFELEVBQVcsR0FHZmtCLEVBQVkxQixpQkFBaUIsVUFBV0ssSUFDdENBLEVBQUV3QixpQkFDRixNQUFNQyxFQUFhSCxFQUFpQkksTUNabkIsRUFBQ3ZCLEVBQVVzQixLQUNMckMsU0FBU0MsY0FBYyxpQkFBaEQsTUFDT3FCLEVDSEMsQ0FBRU8sS0RHc0JRLEVDSGhCRSxLQUFNLElESXJCeEIsRUFBU3lCLEtBQUtsQixFQUFRLEVEVXJCLENBQWFQLEVBQVVzQixHQUN2QixFQUFldEIsRUFBVUMsR0FDekJrQixFQUFpQkksTUFBUSxJQUFJLElBRy9CSCxFQUFZNUIsaUJBQWlCLFNBQVVLLElBQ0MsT0FBbkNBLEVBQUVDLE9BQU80QixRQUFRQyxnQkFDbEIxQixFQUFrQkosRUFBRUMsT0FBT2EsUUFBUUMsTUFDbkMsRUFBZVosRUFBVUMsR0FDMUIsR0FHTCxDR3RCQUQsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2RvbS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9yZW5kZXItcHJvamVjdHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvY2xlYXItZWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9wcm9qZWN0cy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9pbml0LXByb2plY3RzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Byb2plY3RzLWZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRvbVN0dWZmID0gKCgpID0+IHtcblxuY29uc3QgaGFtYnVyZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhhbWJ1cmdlcicpO1xuY29uc3QgcHJvamVjdFNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdHMnKTtcbmNvbnN0IGFkZFRhc2tCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLXRhc2snKTtcbmNvbnN0IHByb2plY3RFeGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmV4aXQtYnRuJyk7XG5jb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbCcpO1xuY29uc3QgbW9kYWxFeGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWV4aXQtYnRuJyk7XG5cbmhhbWJ1cmdlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgcHJvamVjdFNlY3Rpb24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcbn0pO1xuXG5hZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgYWRkVGFza0J0bi5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1hY3RpdmUnKTtcblxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbC1oaWRlJyk7XG4gICAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwtc2hvdycpO1xuICB9LCA3MDApO1xufSk7XG5cbiAgbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGlmKGUudGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ21vZGFsIG1vZGFsLXNob3cnKXtcbiAgICAgIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsLXNob3cnKTtcbiAgICAgIG1vZGFsLmNsYXNzTGlzdC5hZGQoJ21vZGFsLWhpZGUnKTtcbiAgICAgIGFkZFRhc2tCdG4uY2xhc3NMaXN0LnJlbW92ZSgnYWRkLXRhc2stYWN0aXZlJyk7XG4gICAgfTtcbiAgfSk7XG5cbiAgbW9kYWxFeGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgbW9kYWwuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtc2hvdycpO1xuICAgICAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwtaGlkZScpO1xuICAgICAgYWRkVGFza0J0bi5jbGFzc0xpc3QucmVtb3ZlKCdhZGQtdGFzay1hY3RpdmUnKTtcbiAgfSk7XG5cbnByb2plY3RFeGl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBwcm9qZWN0U2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbn0pO1xuXG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBkb21TdHVmZjtcblxuIiwiaW1wb3J0IGNsZWFyRWxlbWVudCBmcm9tICcuL2NsZWFyLWVsZW1lbnQnO1xuXG5jb25zdCByZW5kZXJQcm9qZWN0cyA9IChwcm9qZWN0cywgc2VsZWN0ZWRQcm9qZWN0KSA9PiB7XG4gICBjb25zdCBwcm9qZWN0c0xpc3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RzLWxpc3QnKTtcblxuICAgY2xlYXJFbGVtZW50KHByb2plY3RzTGlzdEVsZW1lbnQpO1xuXG4gICBwcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0LCBpKSA9PiB7XG4gICAgICBjb25zdCBwcm9qZWN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICBwcm9qZWN0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LWVsZW1lbnQnKTtcbiAgICAgIHByb2plY3RFbGVtZW50LmRhdGFzZXQuaW5kZXggPSBpO1xuICAgICAgcHJvamVjdEVsZW1lbnQuaW5uZXJIVE1MID0gYCR7cHJvamVjdC5uYW1lfSA8aSBjbGFzcz0nZmEtc29saWQgZmEtdHJhc2gtY2FuJz48L2k+YDtcblxuICAgICBpZihwcm9qZWN0RWxlbWVudC5kYXRhc2V0LmluZGV4ID09PSBzZWxlY3RlZFByb2plY3Qpe1xuICAgICAgIHByb2plY3RFbGVtZW50LnN0eWxlLmNvbG9yID0gJ3doaXRlJztcbiAgICAgfVxuXG4gICAgICBwcm9qZWN0c0xpc3RFbGVtZW50LmFwcGVuZENoaWxkKHByb2plY3RFbGVtZW50KTtcbiAgIH0pO1xuXG59O1xuXG5leHBvcnQgZGVmYXVsdCByZW5kZXJQcm9qZWN0czsgXG4iLCIgY29uc3QgY2xlYXJFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudCl7XG4gICB3aGlsZSAoZWxlbWVudC5maXJzdENoaWxkKXtcbiAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpOyBcbiAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xlYXJFbGVtZW50O1xuIiwiaW1wb3J0IGluaXRQcm9qZWN0cyBmcm9tICcuL2luaXQtcHJvamVjdHMnO1xuaW1wb3J0IHJlbmRlclByb2plY3RzIGZyb20gJy4vcmVuZGVyLXByb2plY3RzJztcblxuY29uc3QgcHJvamVjdHNKcyA9IGZ1bmN0aW9uICgpIHtcblxuICBjb25zdCBwcm9qZWN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0LWZvcm0nKTtcbiAgY29uc3QgcHJvamVjdEZvcm1JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0LWlucHV0Jyk7XG4gIGNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RzLWxpc3QnKTtcblxuICBsZXQgcHJvamVjdHMgPSBbXTtcbiAgbGV0IHNlbGVjdGVkUHJvamVjdDtcblxuICBwcm9qZWN0Rm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBpbnB1dFZhbHVlID0gcHJvamVjdEZvcm1JbnB1dC52YWx1ZTtcbiAgICBpbml0UHJvamVjdHMocHJvamVjdHMsIGlucHV0VmFsdWUpO1xuICAgIHJlbmRlclByb2plY3RzKHByb2plY3RzLCBzZWxlY3RlZFByb2plY3QpO1xuICAgIHByb2plY3RGb3JtSW5wdXQudmFsdWUgPSBudWxsO1xuICB9KTtcblxuICBwcm9qZWN0TGlzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgaWYoZS50YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnbGknKXtcbiAgICAgIHNlbGVjdGVkUHJvamVjdCA9IGUudGFyZ2V0LmRhdGFzZXQuaW5kZXg7XG4gICAgICByZW5kZXJQcm9qZWN0cyhwcm9qZWN0cywgc2VsZWN0ZWRQcm9qZWN0KTtcbiAgICB9O1xuICB9KTtcblxufTtcblxuZXhwb3J0IGRlZmF1bHQgcHJvamVjdHNKcztcblxuXG4iLCJpbXBvcnQgcHJvamVjdEZhY3RvcnkgZnJvbSAnLi9wcm9qZWN0cy1mYWN0b3J5JztcblxuY29uc3QgaW5pdFByb2plY3RzID0gKHByb2plY3RzLCBpbnB1dFZhbHVlKT0+IHtcbiAgY29uc3QgcHJvamVjdEZvcm1JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0LWZvcm0nKVxuICAgY29uc3QgcHJvamVjdCA9IHByb2plY3RGYWN0b3J5KGlucHV0VmFsdWUpO1xuICAgcHJvamVjdHMucHVzaChwcm9qZWN0KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGluaXRQcm9qZWN0cztcbiIsImNvbnN0IHByb2plY3RGYWN0b3J5ID0gKCBuYW1lICkgPT4ge1xuICAgcmV0dXJuIHsgbmFtZSwgbGlzdDogW10gfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcHJvamVjdEZhY3Rvcnk7XG5cbiAgXG4iLCJpbXBvcnQgZG9tU3R1ZmYgZnJvbSAnLi9tb2R1bGVzL2RvbSc7XG5pbXBvcnQgcHJvamVjdHNKcyBmcm9tICcuL21vZHVsZXMvcHJvamVjdHMuanMnXG5cbmRvbVN0dWZmXG5cbnByb2plY3RzSnMoKTtcblxuXG5cbiJdLCJuYW1lcyI6WyJoYW1idXJnZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9qZWN0U2VjdGlvbiIsImFkZFRhc2tCdG4iLCJwcm9qZWN0RXhpdCIsIm1vZGFsIiwibW9kYWxFeGl0QnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImFkZCIsInNldFRpbWVvdXQiLCJyZW1vdmUiLCJlIiwidGFyZ2V0IiwiY2xhc3NOYW1lIiwicHJvamVjdHMiLCJzZWxlY3RlZFByb2plY3QiLCJwcm9qZWN0c0xpc3RFbGVtZW50IiwiZWxlbWVudCIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImZvckVhY2giLCJwcm9qZWN0IiwiaSIsInByb2plY3RFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImRhdGFzZXQiLCJpbmRleCIsImlubmVySFRNTCIsIm5hbWUiLCJzdHlsZSIsImNvbG9yIiwiYXBwZW5kQ2hpbGQiLCJwcm9qZWN0Rm9ybSIsInByb2plY3RGb3JtSW5wdXQiLCJwcm9qZWN0TGlzdCIsInByZXZlbnREZWZhdWx0IiwiaW5wdXRWYWx1ZSIsInZhbHVlIiwibGlzdCIsInB1c2giLCJ0YWdOYW1lIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9